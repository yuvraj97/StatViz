import os
from PIL import Image
import streamlit as st
import pandas as pd
from logic.stats.stats import run


def stPandas(npArray, label="Random Draws"):
    npArray = npArray.reshape((1, len(npArray)))
    npArray = pd.DataFrame(data=npArray, index=[label])
    npArray.columns += 1
    return npArray


def stDisplay(n_population, n_sample, true_p, n_simulations):
    population_sample, samples, fig, estimate, estimators = run(n_population, n_sample, true_p, n_simulations)
    population_sample = stPandas(population_sample, "Random Draws")
    redballs = [sample.sum() for sample in samples]
    samples = [stPandas(sample, "Random Draws") for sample in samples]
    estimate = "{:.4f}".format(estimate)

    tex = []
    for i in range(5):
        t = "$\\widehat{p}$ = " + f"**{int(estimators[i] * n_sample)}/{n_sample} = " + "{:.4f}".format(
            estimators[i]) + "**"
        tex.append(t)

    st.plotly_chart(fig)

    image_path = os.path.join(os.getcwd(), "img", "dogma.png")
    image = Image.open(image_path)
    st.image(image, use_column_width=True)

    st.markdown("""
    [Remember the Central Dogma of Probability and Statistics](https://read.quantml.org/stats/#dogma)    
    ## Scenerio
    Say we have a bag full of """ + "$\\color{red}{\\text{red balls}}$" + " and " + "$\\color{blue}{\\text{blue balls}}.$" + """
    And we want to determine probability of drawing a """ + "$\\color{red}{\\text{red balls}}$" + """    
    
    ## Truth    
    First of all we want some Data, Here the data will be generated by a computer but to generate the data
    we need some underlying **Truth** that we describes in our left sidebar.     
    Here the **truth** is, "Proportion of """ + "$\\color{red}{\\text{red balls}}$" + """ = $""" + str(true_p) + """$"    
    ## Probability    
    **Probability** tell us what our data look like, so we know that $p = """ + str(true_p) + """$
    so using this probability we generate(synthatic) data.""")

    st.write(population_sample)

    st.markdown("""
    Here """ + "$\\color{red}{1\\text{ represent red balls}}$" + " and " + "$\\color{blue}{0 \\text{ represent blue balls}}.$" + """    
    ## Observation   
    We have a population of $""" + str(n_population) + """$ Balls, now we draw a sample of $""" + str(
        n_sample) + """$ balls out of these $""" + str(n_population) + """$ balls""")

    st.write(samples[0])
    st.markdown("""
    ## Statistics    
    **Statistics** gives us an estimate of true "proportion" (that we set to $""" + str(true_p) + """$).    
    Here we don't know what the real proportion is we just have a data of $""" + str(n_sample) + """$ balls.     
    We use Statistics to estimate the true proportion (of all $""" + str(n_population) + """$ balls),
    in this case we just see how many balls are $\\color{red}{\\text{red}}$ balls do we have and divide it by total number of balls(=$""" + str(
        n_sample) + """$).    
    In our sample we have $""" + str(redballs[0]) + """ \\color{red}{\\text{red balls}}$ so for this simulation
    our estimate is $\\hat{p} = """ + str(redballs[0]) + """/""" + str(n_sample) + """=""" + str(
        redballs[0] / n_sample) + """$

    Our population is much larger as compare to our sample so we perform this cycle multiple times and get multiple estimates, 
    then we combine those estimate to create a final estimate.    
    In our case we perform this cycle $""" + str(n_simulations) + """$ times.   
    So that we have some confidence in our estimate, in this case we perform it
    ### Observation     
    We have data for $""" + str(n_simulations) + """$ experiments, lets see the data for first 3 experiments.      
    #### Experiment 1: 
    *   In first experiment out of $""" + str(n_sample) + """$,  $""" + str(int(estimators[0] * n_sample)) + """$ couples turn there head to right.    
        So estimate for first experiment is """ + str(tex[0]) + """    
    #### Experiment 2: 
    *   In second experiment out of $""" + str(n_sample) + """$,  $""" + str(int(estimators[1] * n_sample)) + """$ couples turn there head to right.    
        So estimate for first experiment is """ + str(tex[1]) + """    
    #### Experiment 3: 
    *   In first experiment out of $""" + str(n_sample) + """$,  $""" + str(int(estimators[2] * n_sample)) + """$ couples turn there head to right.    
        So estimate for first experiment is """ + str(tex[2]) + """    
    
    .    
    .    
    .""")
    st.success("Here our estimate is $\\bf{\widehat{p} = " + estimate + "}$")


def main(state):
    # print("    ======== stats.py [START] ========")

    if (state.stats_init == None):
        # print("        stats.main state initializing ...")
        state.stats_init = True
        state.vars = []

    n_population = st.sidebar.number_input("Enter population size", min_value=100, max_value=400, value=200)
    n_sample = st.sidebar.number_input("Enter sample size", min_value=10, max_value=100, value=50)
    true_p = st.sidebar.slider("Proportion of Red balls (p)", min_value=0.0, max_value=1.0, value=0.35, step=0.05)
    n_simulations = st.sidebar.number_input("Enter number of simulation", min_value=10, max_value=30, value=15)

    vars = [n_population, n_sample, true_p, n_simulations]

    stDisplay(n_population, n_sample, true_p, n_simulations)
    # print("    ======== stats.py  [END]  ========")
